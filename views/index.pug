extends layout

block content
  if nodes.length > 1
    div(class='container-fluid nodes-container')
      each node in nodes
        unless node.type === 'generator'
          div(class='card')
            h3(class='text-center text-dark', style='background-color: ' + node.color) #{node.name} (#{node.type})
            if node.type === 'miner'
              div(class='row')
                div(class='col d-flex flex-column')
                  div(class='text-center progress-text') Transaction Pool
                  div(class='progress')
                    div(
                      class='progress-bar', 
                      role='progressbar', 
                      name='transactionPool', 
                      data-nodeid=node.nodeId, 
                      style='width: 0%', 
                      aria-valuenow='0', 
                      aria-valuemin='0', 
                      aria-valuemax=node.maxPending
                    )
                div(class='col d-flex flex-column')
                  div(class='text-center progress-text') Mining Progress
                  div(class='progress')
                    div(
                      class='progress-bar', 
                      role='progressbar', 
                      name='miningProcess',
                      data-nodeid=node.nodeId, 
                      style='width: 0%', 
                      aria-valuenow='0', 
                      aria-valuemin='0', 
                      aria-valuemax=node.miningTime
                    )
            div(id='canvas-container-' + node.nodeId, name='canvas-container', data-nodeid=node.nodeId)
              if node.type === 'miner'
                div(class='alert alert-secondary' role='alert') Reward: 
                  span(id='reward-' + node.nodeId, name='reward', data-nodeid=node.nodeId)
              div(class='zoom-buttons')
                button(
                  class='btn btn-secondary', 
                  type='button', 
                  data-nodeid=node.nodeId, 
                  onclick='zoomIn(event, this.getAttribute("data-nodeid"))'
                )
                  i(class='fas fa-plus')
                button(
                  class='btn btn-secondary', 
                  type='button', 
                  data-nodeid=node.nodeId, 
                  onclick='zoomOut(event, this.getAttribute("data-nodeid"))'
                )
                  i(class='fas fa-minus')
  else
    div(class='container d-flex flex-column justify-content-center align-items-center init-container')
      div(class='form-group')
        label(for="blockchainInput") Upload a file to start visualization
        input(class='form-control-file', type="file", id='blockchainInput', accept='.json', onchange='upload(this.files[0])')
      div or
      div Add nodes in the settings and publish transactions by hand


  div(class='publish-container')
    div(class='d-flex flex-row align-items-center justify-content-center container text-light')
      span(class='publish-text') Publish a new transaction:
      div(class='publish-text') reward
      input(class='form-control text-light', type='number', id='transactionReward', value='0', onfocus='registerEnter(event)')
      button(class='btn btn-outline-light', type='button', id='publishButton', onclick='publishTransaction(this)') Publish

  div(class='alert alert-dark text-muted' id='publishAlert' role='alert') 
    span Published Successfully!