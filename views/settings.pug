extends layout

block content
  div(class='container settings-container')
    each node, index in nodes
      div(class='card')
        if node.type === 'generator'
          h3(class='card-header text-center text-light') Transaction Generator
        else
          h3(class='card-header text-center text-light') Node #{index}
            button(class='btn btn-outline-light', type='button', data-nodeid=node.nodeId, onclick='deleteNode(this.getAttribute("data-nodeid"))') DELETE
        div(class='card-block')
          h4(class='card-title') Information
          div(class='row')
            div(class='d-flex align-items-center col') ID
            div(class='d-flex align-items-center col') #{node.nodeId}
          unless node.type === 'generator'
            div(class='form-group row')
              div(class='d-flex align-items-center col') Type
              div(class='d-flex align-items-center col') #{node.type}
            div(class='form-group row')
              div(class='d-flex align-items-center col') Name
              div(class='col')
                input(
                  class='form-control', 
                  type='text', 
                  value=node.name, 
                  data-nodeid=node.nodeId, 
                  oninput='updateNode("update node name", this.getAttribute("data-nodeid"), this.value)'
                )
            if node.type === 'miner'
              div(class='form-group row')
                div(class='d-flex align-items-center col') Color
                div(class='col')
                  input(
                    class='form-control', 
                    type='text', 
                    value=node.color,
                    data-nodeid=node.nodeId, 
                    oninput='updateNode("update node color", this.getAttribute("data-nodeid"), this.value)'
                  )
          h4(class='card-title') Network Delay (seconds)
          each neighbor in node.neighbors
            div(class='form-group row')
              div(class='d-flex align-items-center col', name='neighborName', data-nodeid=neighbor.id) #{neighbor.name}
              div(class='col')
                input(
                  class='form-control', 
                  type='number', 
                  value=neighbor.delay,
                  data-nodeid=node.nodeId,
                  data-neighborId=neighbor.id
                  oninput='updateNode("update node neighbor", this.getAttribute("data-nodeid"), this.value, this.getAttribute("data-neighborId"))'
                )
          if node.type === 'miner'
            h4(class='card-title') Mining Strategy
            div(class='form-group row')
              div(class='d-flex align-items-center col') Mining Time (Seconds)
              div(class='col')
                input(
                  class='form-control', 
                  type='number', 
                  value=node.miningTime,
                  data-nodeid=node.nodeId, 
                  oninput='updateStrategy("update mining time", this.getAttribute("data-nodeid"), this.value)'
                )
            div(class='form-group row')
              div(class='d-flex align-items-center col') Minimum Value of Transactions
              div(class='col')
                input(
                  class='form-control', 
                  type='number', 
                  value=node.minValue,
                  data-nodeid=node.nodeId, 
                  oninput='updateStrategy("update min value", this.getAttribute("data-nodeid"), this.value)'
                )
            div(class='form-group row')
              div(class='d-flex align-items-center col') Number of Transactions to be Mined
              div(class='col')
                input(
                  class='form-control', 
                  type='number', 
                  value=node.mineNumber,
                  data-nodeid=node.nodeId, 
                  oninput='updateStrategy("update mine number", this.getAttribute("data-nodeid"), this.value)'
                )
            div(class='form-group row')
              div(class='d-flex align-items-center col') Maximum Number of Pending Transactions
              div(class='col')
                input(
                  class='form-control', 
                  type='number', 
                  value=node.maxPending,
                  data-nodeid=node.nodeId, 
                  oninput='updateStrategy("update max pending", this.getAttribute("data-nodeid"), this.value)'
                )

    div(class='row')
      button(class='btn btn-outline-secondary col m-2', type='button', onclick='addNode("miner")') Add a miner
      button(class='btn btn-outline-secondary col m-2', type='button', onclick='addNode("nonminer")') Add a nonminer
  
  div(class='alert alert-secondary text-muted', id='savingSpinner', role='alert') 
    i(class='fas fa-spinner fa-spin') 
    span Saving...
    